/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Warehouse;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import Warehouse.Invoice;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Peyman
 */
public class test extends javax.swing.JFrame {
Connection con;
Connection con1;
Statement stmt;
Statement stmt1;
ResultSet rs;
ResultSet rs1;
 ImageIcon icon = new ImageIcon("src/logo.png");
int curRow=0;
    /**
     * Creates new form test
     */
    public test() {
        initComponents();
        DoConnect();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        plus = new javax.swing.JButton();
        date1 = new javax.swing.JTextField();
        material = new javax.swing.JButton();
        invoiceCall = new javax.swing.JButton();
        find = new javax.swing.JButton();
        matNameSelect = new javax.swing.JComboBox<>();
        date3 = new javax.swing.JTextField();
        New = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        date2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        invTable = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("hi every one");

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));
        jPanel1.setForeground(new java.awt.Color(255, 51, 102));
        jPanel1.setFont(new java.awt.Font("F_Nazanin", 2, 18)); // NOI18N

        plus.setText("plus");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        material.setText("material");
        material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialActionPerformed(evt);
            }
        });

        invoiceCall.setText("invoice");
        invoiceCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceCallActionPerformed(evt);
            }
        });

        find.setBackground(new java.awt.Color(0, 0, 102));
        find.setText("find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        matNameSelect.setBackground(new java.awt.Color(220, 220, 186));
        matNameSelect.setFont(new java.awt.Font("Nazanin", 1, 14)); // NOI18N
        matNameSelect.setForeground(new java.awt.Color(0, 0, 102));
        matNameSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        matNameSelect.setSelectedItem(find);
        matNameSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matNameSelectActionPerformed(evt);
            }
        });

        New.setText("new");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        previous.setText("table ");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        next.setText("next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        date2.setBackground(new java.awt.Color(51, 255, 0));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

                {"1", null, null, null, null}
            },
            new String [] {
                "name", "last name", "phone number", "Id", "new"
            }
        ));
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table.setGridColor(new java.awt.Color(255, 204, 255));
        jScrollPane1.setViewportView(table);

        invTable.setText("invoice");
        invTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(material)
                            .addComponent(matNameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 376, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(New, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoiceCall))
                        .addGap(15, 15, 15))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(date2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(date3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(find)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(invTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(plus)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(invTable)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(New))
                        .addGap(18, 18, 18)
                        .addComponent(matNameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(find)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(previous)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(plus)))
                .addGap(236, 236, 236)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(material)
                    .addComponent(invoiceCall))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt){
       
        setIconImage(icon.getImage());
        
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed

try {
         if(  rs.next()){
 

  String date12 = rs.getString("date1");
  String date22= rs.getString("date2");
  String date32= rs.getString("date3");

date1.setText(date12);
date2.setText(date22);
date3.setText(date32);

}
         else{
                 rs.previous();
                 JOptionPane.showMessageDialog(this, "End of File");
                 }
       }
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
   
           
}         // TODO add your handling code here:
    }//GEN-LAST:event_nextActionPerformed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed

try{
        String date12= date1.getText();
        String date22= date2.getText();
        
        SimpleDateFormat sdf1=new  SimpleDateFormat("yyyy-MM-dd HH:mm:ss.s");
        Timestamp ts1=new Timestamp(System.currentTimeMillis());
        System.out.println(sdf1.format(ts1));
        String date32= sdf1.format(ts1);
        System.out.println(date32);


try{
               try{
                   rs.moveToInsertRow();
   
                   rs.updateString("date1", date12);
                   rs.updateString("date2", date22);
                   rs.updateString("date3", date32);
               } 
               catch(SQLException err){
       JOptionPane.showMessageDialog(this, "WRONG DATE TYPE");
               }
    rs.insertRow();
    stmt.close();
     rs.close();
    
     stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
     String SQL1 = "SELECT*FROM testdb";
     rs = stmt.executeQuery (SQL1);
     rs.next();
 
    String date13 = rs.getString("date1");
    String date23= rs.getString("date2");
    String date33= rs.getString("date3");

  
date1.setText(date13);
date2.setText(date23);
date3.setText(date33);
   
         
   JOptionPane.showMessageDialog(this, "Record Saved");
}

catch (SQLException err){
       JOptionPane.showMessageDialog(this, err.getMessage());

}

}
catch    (IllegalArgumentException err)                        {
    JOptionPane.showMessageDialog(this, "ENTER DATE YYYY-MM-DD HH:MM:SS.S");
}

        // TODO add your handling code here:
    }//GEN-LAST:event_NewActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
ArrayList nameA=new ArrayList(50);
matNameSelect.removeAllItems();
try {
            String host = "jdbc:derby://localhost:1527/invoice";
            String uName = "payam";
            String uPass = "123456";
            con1 = DriverManager.getConnection(host,uName,uPass);
            stmt1 =  con1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            String SQL1 = "SELECT*FROM materialdb ";
            
            rs1 = stmt1.executeQuery( SQL1 );
            
            while (rs1.next()) {
                
                String name1=rs1.getString("matname");
                 nameA.add(name1);
                 
                 System.out.println(nameA);
            matNameSelect.addItem(name1);
                
            } 
              System.out.println(nameA);
              String namelist = nameA.toString();
                     System.out.println(namelist);
              
              
                  
                   
                    rs.updateString("selectname", namelist);
                     rs.updateRow();
                 stmt1.close();
                rs1.close();
            }
        
        catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
            
        
        
                                  }                                              
        // TODO add your handling code here:
    }//GEN-LAST:event_findActionPerformed

    private void matNameSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matNameSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matNameSelectActionPerformed

    private void invoiceCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceCallActionPerformed

this.setVisible(false);
 new Invoice().setVisible(true);


        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceCallActionPerformed

    
    
    
    
    
    private void materialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materialActionPerformed
try{
     this.setVisible(false);
 new Material().setVisible(true);  
                stmt.close();
                rs.close();

}
                catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
    }        
    }//GEN-LAST:event_materialActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed

String firs = table.getModel().getValueAt(0, 1).toString();
System.out.println(firs);
String first1 = ("1");
table.setValueAt(first1 , 0, 0);

String first =(String) table.getValueAt(0, 1);
table.setValueAt(first , 1, 0);
System.out.println(first1);
        // TODO add your handling code here:
    }//GEN-LAST:event_previousActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed

         DefaultTableModel table1 = (DefaultTableModel) table.getModel();
     //  for(int row1 = 0; row1<4; row1++)
          table1.addRow(new Object[][]{{"", "", "", "", ""},});
         
int rows=table1.getRowCount();
int row = rows-1;
table1.setValueAt(rows , row, 0);
System.out.println(rows);

        // TODO add your handling code here:
    }//GEN-LAST:event_plusActionPerformed

    
    
    
    private void invTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invTableActionPerformed

//String matname4=matSearchBox.getText();
           int l=0;
           String[] columns = { "name", "unit", "producer" }; // TODO add your handling code here:
           String data[][] = new String[10][3];
           int i=0;
           while (i<10) {
           
           
          // String matname6 = rs.getString("matname");
         //  String matunit6= rs.getString("matunit");
          // String matproducer6 = rs.getString("matproducer");
           
           
         //  if(matname6.equals(matname4)){
           //System.out.println("find it");
           
           
           
          // l++;*/
           
           
           data[i][0] = "";
           data[i][1] = "";
           data[i][2] = "";
           i++;
           }
           
           
DefaultTableModel model = new DefaultTableModel(data, columns);
      JTable tableiv = new JTable(model);
      tableiv.setShowGrid(true);
      tableiv.setShowVerticalLines(true);
      JScrollPane pane = new JScrollPane(tableiv);
      JFrame f = new JFrame("To make an Invoice");
       JLabel label = new JLabel("Invoice nember :");
        JTextField text = new JTextField("        ");
      JPanel panel = new JPanel();
        panel.add(label);
         panel.add(text);
      panel.add(pane);
      f.add(panel);
      f.setSize(500, 600);
     // f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      f.setVisible(true);
      
       
       JButton save = new JButton("save");
       Action action = new AbstractAction()
{
    @Override
    public void actionPerformed(ActionEvent e)
    {
        System.out.println("save all data from table to database");
       String oops = text.getText();
     // int id=Integer.parseInt(oops);
       System.out.println(oops);
       int i=0;
       int p1;
       int o1;
       int n=0;
      // while (i<10) {
           
       //   tableiv.setValueAt(i , i, 0); 
        //      tableiv.setValueAt(i+18 , i, 1); 
             
          
         //  i++;
          // }
       while(n<10){
        String p =tableiv.getModel().getValueAt(n, 1).toString();
        String o =tableiv.getModel().getValueAt(n, 2).toString();
         String q =tableiv.getModel().getValueAt(n, 0).toString();
            try {
       String host = "jdbc:derby://localhost:1527/invoice";
            String uName = "payam";
            String uPass = "123456";
    
       con1 = DriverManager.getConnection(host, uName, uPass);
    
      String query = "SELECT * FROM TABLETEST";
    
     stmt1 = con1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
     rs1 = stmt1.executeQuery(query);
      
      rs1.moveToInsertRow();
      rs1.updateString("ID", q);
      rs1.updateString("NAME", p);
      rs1.updateString("AGE", oops);
      rs1.insertRow();
      stmt1.close();
      rs1.close();
      con1.close();
      
      
      
      
      
      
      
      
  }
            
   catch(SQLException err) {
      // System.out.println("here");
    }         
              //p1=Integer.parseInt(p);
                // o1=Integer.parseInt(o);
             // int j = p1+2*o1;
           //tableiv.setValueAt(j , n, 2);
           System.out.println(p);
           n++;
       }
       
    }
};

     save.addActionListener(action);
    
        save.setSize(100, 30);
       panel.add(save);
       
       

       
           
           
    }//GEN-LAST:event_invTableActionPerformed
 public  void DoConnect() {
     // frame1.setBackground(Color.RED);
         try {
            String host = "jdbc:derby://localhost:1527/invoice";
            String uName = "payam";
            String uPass = "123456";
         con = DriverManager.getConnection(host,uName,uPass);
  stmt =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
 String SQL1 = "SELECT*FROM testdb";
 

  rs = stmt.executeQuery(SQL1);
   

  
 rs.next();

 
 
  
    String date12 = rs.getString("date1");
    String date22= rs.getString("date2");
    String date32= rs.getString("date3");
    String namesel= rs.getString("selectname");

date1.setText(date12);
date2.setText(date22);
date3.setText(date32);
  matNameSelect.removeAllItems();
  matNameSelect.addItem("names");
}
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
}
         
          setIconImage(icon.getImage());
        /* ArrayList nameA=new ArrayList(50);
matNameSelect.removeAllItems();
try {
            String host = "jdbc:derby://localhost:1527/invoice";
            String uName = "payam";
            String uPass = "123456";
            con1 = DriverManager.getConnection(host,uName,uPass);
            stmt1 =  con1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            String SQL2 = "SELECT*FROM materialdb ";
            
            rs1 = stmt1.executeQuery( SQL2 );
            
            while (rs1.next()) {
                
                String name1=rs1.getString("matname");
                 nameA.add(name1);
                 
                 System.out.println(nameA);
            matNameSelect.addItem(name1);
                
            } 
              System.out.println(nameA);
              String namelist = nameA.toString();
                     System.out.println(namelist);
              
              
                  
                   
                    rs.updateString("selectname", namelist);
                     rs.updateRow();
                 stmt1.close();
                rs1.close();
            }
        
        catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
            
        }*/
        
                                   
          
          
          
        //  DefaultTableModel table1 = (DefaultTableModel) table.getModel();
      //   for(int row1 = 0; row1<4; row1++)
        //  table1.addRow(new Object[][]{{null, null, null, null, null},});
    }
    /**
     * @param args the command line arguments
     */
  /*  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    //</editor-fold>
    
        //</editor-fold>

        /* Create and display the form */
       public static void main(String args[]){
    
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new test().setVisible(true);
        });
        
        
     }
       
       
       
       
      /*  java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() ;
                new test().setVisible(true);
            
            
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton New;
    private javax.swing.JTextField date1;
    private javax.swing.JTextField date2;
    private javax.swing.JTextField date3;
    private javax.swing.JButton find;
    private javax.swing.JButton invTable;
    private javax.swing.JButton invoiceCall;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> matNameSelect;
    private javax.swing.JButton material;
    private javax.swing.JButton next;
    private javax.swing.JButton plus;
    private javax.swing.JButton previous;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}

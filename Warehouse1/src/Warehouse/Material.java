/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Warehouse;
import static java.lang.ProcessBuilder.Redirect.from;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import static java.sql.Timestamp.from;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Peyman
 */
public class Material extends javax.swing.JFrame {
Connection con;
Connection con1;
Statement stmt;
Statement stmt1;
ResultSet rs;
ResultSet rs1;
int curRow=0;
    /**
     * Creates new form Material
     */
    public Material() {
        initComponents();
         DoConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        matName = new javax.swing.JTextField();
        matUnit = new javax.swing.JTextField();
        matProducer = new javax.swing.JTextField();
        matQrcode = new javax.swing.JTextField();
        matQuantity = new javax.swing.JTextField();
        matname = new javax.swing.JLabel();
        matunit = new javax.swing.JLabel();
        matproducer = new javax.swing.JLabel();
        matqrcode = new javax.swing.JLabel();
        matQty = new javax.swing.JLabel();
        showQty = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        matNext = new javax.swing.JButton();
        matPrevious = new javax.swing.JButton();
        matFirst = new javax.swing.JButton();
        matLast = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        matSearchBox = new javax.swing.JTextField();
        matStart = new javax.swing.JButton();
        matSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        matNew = new javax.swing.JButton();
        matUpdate = new javax.swing.JButton();
        matDelete = new javax.swing.JButton();
        matSave = new javax.swing.JButton();
        matSureUpdate = new javax.swing.JButton();
        matSureDelete = new javax.swing.JButton();
        matCCancel = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        matQuantity.setEnabled(false);
        matQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matQuantityActionPerformed(evt);
            }
        });

        matname.setText("Material Name");

        matunit.setText("Material Unit");

        matproducer.setText("Material Producer");

        matqrcode.setText("Material QR Code");

        matQty.setText("Material Quantity");

        showQty.setText("Update Quantity");
        showQty.setToolTipText("");
        showQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showQtyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(matname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matunit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matproducer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matqrcode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(matQrcode, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(matProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(matUnit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(matQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showQty)
                        .addGap(28, 28, 28))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matname)
                    .addComponent(matName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matunit)
                    .addComponent(matUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matproducer)
                    .addComponent(matProducer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matqrcode)
                    .addComponent(matQrcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matQuantity)
                    .addComponent(matQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        matNext.setText("Next");
        matNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matNextActionPerformed(evt);
            }
        });

        matPrevious.setText("Previous");
        matPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matPreviousActionPerformed(evt);
            }
        });

        matFirst.setText("First");
        matFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matFirstActionPerformed(evt);
            }
        });

        matLast.setText("Last");
        matLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(matFirst)
                .addGap(30, 30, 30)
                .addComponent(matLast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(matPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(matNext, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matNext)
                    .addComponent(matPrevious)
                    .addComponent(matFirst)
                    .addComponent(matLast))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel1.setText("Material Name");
        jLabel1.setEnabled(false);

        matSearchBox.setEnabled(false);

        matStart.setText("Start");
        matStart.setEnabled(false);
        matStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matStartActionPerformed(evt);
            }
        });

        matSearch.setText("Search");
        matSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(matStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(matSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matStart)
                    .addComponent(matSearch))
                .addGap(17, 17, 17))
        );

        matNew.setText("New");
        matNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matNewActionPerformed(evt);
            }
        });

        matUpdate.setText("Update");
        matUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matUpdateActionPerformed(evt);
            }
        });

        matDelete.setText("Delete");
        matDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matDeleteActionPerformed(evt);
            }
        });

        matSave.setText("Save");
        matSave.setEnabled(false);
        matSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matSaveActionPerformed(evt);
            }
        });

        matSureUpdate.setText("Sure To Update");
        matSureUpdate.setEnabled(false);
        matSureUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matSureUpdateActionPerformed(evt);
            }
        });

        matSureDelete.setText("Sure To Delete");
        matSureDelete.setEnabled(false);
        matSureDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matSureDeleteActionPerformed(evt);
            }
        });

        matCCancel.setText("Cancel");
        matCCancel.setEnabled(false);
        matCCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matCCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(matCCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(matDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matSureDelete))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(matSureUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(matUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(matSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matNew)
                    .addComponent(matUpdate)
                    .addComponent(matDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matSave)
                    .addComponent(matSureUpdate)
                    .addComponent(matSureDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(matCCancel)
                .addContainerGap())
        );

        jButton1.setText("go to test");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jButton1)
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(32, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void matLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matLastActionPerformed
try {
          rs.last();
 
  int matquantity_col = rs.getInt("matquantity");
  String matquantity1=Double.toString(matquantity_col);
  String matname1 = rs.getString("matname");
  String matunit1= rs.getString("matunit");
  String matproducer1 = rs.getString("matproducer");
  String matqrcode1 = rs.getString("matqrcode");

matQuantity.setText(matquantity1);
matName.setText(matname1);
matUnit.setText(matunit1);
matProducer.setText(matproducer1);
matQrcode.setText(matqrcode1);

       
       }
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
   
           
}   // TODO add your handling code here:
        
        
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_matLastActionPerformed

    private void matNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matNextActionPerformed


try {
         if(  rs.next()){
 
 int matquantity_col = rs.getInt("matquantity");
  String matquantity1=Double.toString(matquantity_col);
  String matname1 = rs.getString("matname");
  String matunit1= rs.getString("matunit");
  String matproducer1 = rs.getString("matproducer");
  String matqrcode1 = rs.getString("matqrcode");

matQuantity.setText(matquantity1);
matName.setText(matname1);
matUnit.setText(matunit1);
matProducer.setText(matproducer1);
matQrcode.setText(matqrcode1);

}
         else{
                 rs.previous();
                 JOptionPane.showMessageDialog(this, "End of File");
                 }
       }
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
   
           
} 
               // TODO add your handling code here:
    }//GEN-LAST:event_matNextActionPerformed

    private void matPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matPreviousActionPerformed



try {
         if(  rs.previous()){
 
 int matquantity_col = rs.getInt("matquantity");
  String matquantity1=Double.toString(matquantity_col);
  String matname1 = rs.getString("matname");
  String matunit1= rs.getString("matunit");
  String matproducer1 = rs.getString("matproducer");
  String matqrcode1 = rs.getString("matqrcode");

matQuantity.setText(matquantity1);
matName.setText(matname1);
matUnit.setText(matunit1);
matProducer.setText(matproducer1);
matQrcode.setText(matqrcode1);
}
         else{
                 rs.next();
                 JOptionPane.showMessageDialog(this, "First of File");
                 }
       }
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
   
           
} 
         // TODO add your handling code here:
    }//GEN-LAST:event_matPreviousActionPerformed

    private void matFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matFirstActionPerformed



               try {
          rs.first();
 
 int matquantity_col = rs.getInt("matquantity");
  String matquantity1=Double.toString(matquantity_col);
  String matname1 = rs.getString("matname");
  String matunit1= rs.getString("matunit");
  String matproducer1 = rs.getString("matproducer");
  String matqrcode1 = rs.getString("matqrcode");

matQuantity.setText(matquantity1);
matName.setText(matname1);
matUnit.setText(matunit1);
matProducer.setText(matproducer1);
matQrcode.setText(matqrcode1);
       
       }
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
   
           
}   // TODO add your handling code here:
          // TODO add your handling code here:
    }//GEN-LAST:event_matFirstActionPerformed

    private void matCCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matCCancelActionPerformed
 try{
        rs.absolute(curRow);

        matQuantity.setText(Double.toString(rs.getDouble("matquantity")));
        String matname1 = rs.getString("matname");
        String matunit1= rs.getString("matunit");
        String matproducer1 = rs.getString("matproducer");
        String matqrcode1 = rs.getString("matqrcode");
        
         matFirst.setEnabled(true);
         matNext.setEnabled(true);
         matPrevious.setEnabled(true);    
         matLast.setEnabled(true);
         matSureUpdate.setEnabled(false);
         matSureDelete.setEnabled(false);
         matDelete.setEnabled(true);
         matSearch.setEnabled(true);
         matNew.setEnabled(true);
         matSave.setEnabled(false);
         matCCancel.setEnabled(false);
         matStart.setEnabled(false);
         matSearchBox.setEnabled(false);
          jLabel1.setEnabled(false);
         matUpdate.setEnabled(true);
        }
         catch (SQLException err) {
             JOptionPane.showMessageDialog(this, err.getMessage());
         }
      
         

       

        // TODO add your handling code here:
    }//GEN-LAST:event_matCCancelActionPerformed

    private void matSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matSaveActionPerformed
try{
        String matname2 = matName.getText();
        String matunit2= matUnit.getText();
        String matproducer2 = matProducer.getText();
        String matqrcode2= matQrcode.getText();
        String matquantity2=matQuantity.getText();
         Double newMatQty=Double.parseDouble(matquantity2);

try{
    rs.moveToInsertRow();
    rs.updateDouble("matquantity", newMatQty);
    rs.updateString("matname", matname2);
    rs.updateString("matunit", matunit2);
    rs.updateString("matproducer", matproducer2);
    rs.updateString("matqrcode", matqrcode2);
   
    rs.insertRow();
    stmt.close();
     rs.close();
    
     stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
     String SQL1 = "SELECT*FROM materialdb";
     rs = stmt.executeQuery (SQL1);
     rs.next();
      Double matquantity_col = rs.getDouble("matquantity");
  String matquantity3=Double.toString(matquantity_col);
  String matname3 = rs.getString("matname");
  String matunit3= rs.getString("matunit");
  String matproducer3 = rs.getString("matproducer");
   String matqrcode3 = rs.getString("matqrcode");
  
matQuantity.setText(matquantity3);
matName.setText(matname3);
matUnit.setText(matunit3);
matProducer.setText(matproducer3);
matQrcode.setText(matqrcode3);

   
         matFirst.setEnabled(false);
         matNext.setEnabled(false);
         matPrevious.setEnabled(false);    
         matLast.setEnabled(false);
         matSureUpdate.setEnabled(false);
         matSureDelete.setEnabled(false);
         matDelete.setEnabled(false);
         matSearch.setEnabled(false);
         matNew.setEnabled(false);
         matSave.setEnabled(true);
         matCCancel.setEnabled(true);
         matStart.setEnabled(false);
         matSearchBox.setEnabled(false);
          jLabel1.setEnabled(false);
         matUpdate.setEnabled(false);
   JOptionPane.showMessageDialog(this, "Record Saved");
}

catch (SQLException err){
       JOptionPane.showMessageDialog(this, err.getMessage());

}

}
catch    (NumberFormatException err)                        {
    JOptionPane.showMessageDialog(this, err.getMessage());
}



        // TODO add your handling code here:
    }//GEN-LAST:event_matSaveActionPerformed

    private void matSureDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matSureDeleteActionPerformed
try{
         rs.deleteRow();
         stmt.close();
         rs.close();
    
     stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
     String SQL1 = "SELECT*FROM MATERIALDB";
     rs = stmt.executeQuery (SQL1);
     rs.next();
      Double matquantity_col = rs.getDouble("matquantity");
  String matquantity1=Double.toString(matquantity_col);
  String matname1 = rs.getString("matname");
  String matunit1= rs.getString("matunit");
  String matproducer1 = rs.getString("matproducer");
  String matqrcode1 = rs.getString("matqrcode");

matQuantity.setText(matquantity1);
matName.setText(matname1);
matUnit.setText(matunit1);
matProducer.setText(matproducer1);
matQrcode.setText(matqrcode1);


   JOptionPane.showMessageDialog(this, "Record Deleted");
}

catch (SQLException err){
       JOptionPane.showMessageDialog(this, err.getMessage());

}

// TODO add your handlin


        // TODO add your handling code here:
    }//GEN-LAST:event_matSureDeleteActionPerformed

    private void matSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matSearchActionPerformed

          matFirst.setEnabled(false);
         matNext.setEnabled(false);
         matPrevious.setEnabled(false);    
         matLast.setEnabled(false);
         matSureUpdate.setEnabled(false);
         matSureDelete.setEnabled(false);
         matDelete.setEnabled(false);
         matSearch.setEnabled(false);
         matNew.setEnabled(false);
         matSave.setEnabled(false);
         matCCancel.setEnabled(true);
         matStart.setEnabled(true);
         matSearchBox.setEnabled(true);
          jLabel1.setEnabled(true);
         matUpdate.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_matSearchActionPerformed

    private void matNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matNewActionPerformed
         matFirst.setEnabled(false);
         matNext.setEnabled(false);
         matPrevious.setEnabled(false);    
         matLast.setEnabled(false);
         matSureUpdate.setEnabled(false);
         matSureDelete.setEnabled(false);
         matDelete.setEnabled(false);
         matSearch.setEnabled(false);
         matNew.setEnabled(false);
         matSave.setEnabled(true);
         matCCancel.setEnabled(true);
         matStart.setEnabled(false);
         matSearchBox.setEnabled(false);
          jLabel1.setEnabled(false);
         matUpdate.setEnabled(false);
matQuantity.setText("");
matName.setText("");
matUnit.setText("");
matProducer.setText("");
matQrcode.setText("");



        // TODO add your handling code here:
    }//GEN-LAST:event_matNewActionPerformed

    private void matUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matUpdateActionPerformed
         matFirst.setEnabled(false);
         matNext.setEnabled(false);
         matPrevious.setEnabled(false);    
         matLast.setEnabled(false);
         matSureUpdate.setEnabled(true);
         matSureDelete.setEnabled(false);
         matDelete.setEnabled(false);
         matSearch.setEnabled(false);
         matNew.setEnabled(false);
         matSave.setEnabled(false);
         matCCancel.setEnabled(true);
         matStart.setEnabled(false);
         matSearchBox.setEnabled(false);
          jLabel1.setEnabled(false);
         matUpdate.setEnabled(false);


        // TODO add your handling code here:
    }//GEN-LAST:event_matUpdateActionPerformed

    private void matDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matDeleteActionPerformed
        matFirst.setEnabled(false);
         matNext.setEnabled(false);
         matPrevious.setEnabled(false);    
         matLast.setEnabled(false);
         matSureUpdate.setEnabled(false);
         matSureDelete.setEnabled(true);
         matDelete.setEnabled(false);
         matSearch.setEnabled(false);
         matNew.setEnabled(false);
         matSave.setEnabled(false);
         matCCancel.setEnabled(true);
         matStart.setEnabled(false);
         matSearchBox.setEnabled(false);
          jLabel1.setEnabled(false);
         matUpdate.setEnabled(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_matDeleteActionPerformed

    private void matSureUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matSureUpdateActionPerformed
      
    try{    
        
        String matname2 = matName.getText();
        String matunit2= matUnit.getText();
        String matproducer2 = matProducer.getText();
        String matqrcode2= matQrcode.getText();
        String matquantity2=matQuantity.getText();
         Double newMatQty=Double.parseDouble(matquantity2);


try{
    rs.updateDouble("matquantity", newMatQty);
    rs.updateString("matname", matname2);
    rs.updateString("matunit", matunit2);
    rs.updateString("matproducer", matproducer2);
    rs.updateString("matqrcode", matqrcode2);
   
    rs.updateRow();
         JOptionPane.showMessageDialog(this,"Updated");
     
}
    catch (SQLException err) {
    JOptionPane.showMessageDialog(this, err.getMessage());
    }
}
catch    (NumberFormatException err)  {
    JOptionPane.showMessageDialog(this, err.getMessage());
}

    
        // TODO add your handling code here:
    }//GEN-LAST:event_matSureUpdateActionPerformed

    private void matStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matStartActionPerformed

           String matname4=matSearchBox.getText();
           int l=0;
           
                   //to test 
                  // System.out.println(matSearchBox);
          
/*matName.setText("");
matUnit.setText("");
matProducer.setText("");
matQrcode.setText("");
matQuantity.setText("");*/


try {
   /*rs.first();
   Double matQuantity5_col = rs.getDouble("matquantity");
 String matquantity5=Double.toString(matQuantity5_col);
 String matname5 = rs.getString("matname");
 String matunit5= rs.getString("matunit");
 String matproducer5 = rs.getString("matproducer");
 String matqrcode5 = rs.getString("matqrcode");

   if(matname5.equals(matname4)){
            System.out.println("find it");
l++;
matName.setText(matname5);
matUnit.setText(matunit5);
matProducer.setText(matproducer5);
matQrcode.setText(matqrcode5);
matQuantity.setText(matquantity5);


   }
else{*/
   
   
   String columns[] = { "name", "unit", "producer" };
      String data[][] = new String[10][3];
      int i=0;
while (rs.next()) {

// Double matQuantity6_col = rs.getDouble("matquantity");
// String matquantity6=Double.toString(matQuantity6_col);
 String matname6 = rs.getString("matname");
 String matunit6= rs.getString("matunit");
 String matproducer6 = rs.getString("matproducer");
 //String matqrcode6 = rs.getString("matqrcode");

   if(matname6.equals(matname4)){
            System.out.println("find it");

/*matName.setText(matname6);
matUnit.setText(matunit6);
matProducer.setText(matproducer6);
matQrcode.setText(matqrcode6);
matQuantity.setText(matquantity6);
*/

l++;


        data[i][0] = matname6;
        data[i][1] = matunit6;
        data[i][2] = matproducer6;
        i++;










 }
   
   }

DefaultTableModel model = new DefaultTableModel(data, columns);
      JTable table = new JTable(model);
      table.setShowGrid(true);
      table.setShowVerticalLines(true);
      JScrollPane pane = new JScrollPane(table);
      JFrame f = new JFrame("Populate JTable from Database");
      JPanel panel = new JPanel();
      panel.add(pane);
      f.add(panel);
      f.setSize(500, 250);
     // f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      f.setVisible(true);








 }
 /* }*/
                  

catch (SQLException err) {
   JOptionPane.showMessageDialog(this,err.getMessage());
   
} 
   
        System.out.println(l);                                             
if(l>0){
   System.out.println("found");
 JOptionPane.showMessageDialog(this, "found "+l+ " of "+ matname4);
}
else{
       System.out.println("not found");
       JOptionPane.showMessageDialog(this, "there is not any of "+ matname4);
   }
 curRow=1;
        // TODO add your handling code here:
    }//GEN-LAST:event_matStartActionPerformed

    private void matQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matQuantityActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_matQuantityActionPerformed

    private void showQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showQtyActionPerformed
   
        String nametest=matName.getText();
        Double qty=0.0;
        try {
            String host = "jdbc:derby://localhost:1527/invoice";
            String uName = "payam";
            String uPass = "123456";
            con1 = DriverManager.getConnection(host,uName,uPass);
            stmt1 =  con1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            String SQL1 = "SELECT*FROM Invoicedb ";
            
            rs1 = stmt1.executeQuery( SQL1 );
            
            while (rs1.next()) {
                
                
                String name5= rs1.getString("name");
                Double  quantity5 = rs1.getDouble("quantity");
                
                
                if(nametest.equals(name5)){
                    System.out.println(quantity5);
                    qty+=quantity5;
                    System.out.println(qty);
                    String qty1=Double.toString(qty);
                    matQuantity.setText(qty1);
                }
                
            } 
            if(qty==0){
                JOptionPane.showMessageDialog(this,"not found in invoices");
              stmt1.close();
                rs1.close();
                
            }
                else {
                System.out.println("wow!");
                   String matname2 = matName.getText();
                   String matunit2= matUnit.getText();
                   String matproducer2 = matProducer.getText();
                   String matqrcode2= matQrcode.getText();
                   String matquantity2=matQuantity.getText();
                   Double newMatQty=Double.parseDouble(matquantity2);


                      try{
                           rs.updateDouble("matquantity", newMatQty);
                           rs.updateString("matname", matname2);
                           rs.updateString("matunit", matunit2);
                           rs.updateString("matproducer", matproducer2);
                           rs.updateString("matqrcode", matqrcode2);
   
                           rs.updateRow();
                                JOptionPane.showMessageDialog(this,"Updated");
     
                           }
                      catch (SQLException err) {
                           JOptionPane.showMessageDialog(this, err.getMessage());
                           }
                 stmt1.close();
                rs1.close();
            }
        }
        catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
            
        
        
    }//GEN-LAST:event_showQtyActionPerformed
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     

try{
     this.setVisible(false);
 new test().setVisible(true);  
                stmt.close();
                rs.close();

}
                catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
    }//GEN-LAST:event_jButton1ActionPerformed
    }
     public  void DoConnect() {
         try {
            String host = "jdbc:derby://localhost:1527/invoice";
            String uName = "payam";
            String uPass = "123456";
         con = DriverManager.getConnection(host,uName,uPass);
  stmt =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
 String SQL1 = "SELECT*FROM materialdb ";
 

  rs = stmt.executeQuery( SQL1);
   

  
 rs.next();

 
 
   Double matquantity_col = rs.getDouble("matquantity");
   String matquantity1=Double.toString(matquantity_col);
   String matname1 = rs.getString("matname");
   String matunit1= rs.getString("matunit");
   String matproducer1 = rs.getString("matproducer");
   String matqrcode1 = rs.getString("matqrcode");

matQuantity.setText(matquantity1);
matName.setText(matname1);
matUnit.setText(matunit1);
matProducer.setText(matproducer1);
matQrcode.setText(matqrcode1);

}
catch (SQLException err) {
   JOptionPane.showMessageDialog(this, err.getMessage());
}
    }
    
     public static void main(String args[]){
    
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Material().setVisible(true);
        });
     }/**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton matCCancel;
    private javax.swing.JButton matDelete;
    private javax.swing.JButton matFirst;
    private javax.swing.JButton matLast;
    private javax.swing.JTextField matName;
    private javax.swing.JButton matNew;
    private javax.swing.JButton matNext;
    private javax.swing.JButton matPrevious;
    private javax.swing.JTextField matProducer;
    private javax.swing.JTextField matQrcode;
    private javax.swing.JLabel matQty;
    private javax.swing.JTextField matQuantity;
    private javax.swing.JButton matSave;
    private javax.swing.JButton matSearch;
    private javax.swing.JTextField matSearchBox;
    private javax.swing.JButton matStart;
    private javax.swing.JButton matSureDelete;
    private javax.swing.JButton matSureUpdate;
    private javax.swing.JTextField matUnit;
    private javax.swing.JButton matUpdate;
    private javax.swing.JLabel matname;
    private javax.swing.JLabel matproducer;
    private javax.swing.JLabel matqrcode;
    private javax.swing.JLabel matunit;
    private javax.swing.JButton showQty;
    // End of variables declaration//GEN-END:variables
}
